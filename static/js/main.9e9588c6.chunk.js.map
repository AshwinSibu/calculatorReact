{"version":3,"sources":["components/Button.js","components/Input.js","components/Clearbtn.js","App.js","index.js"],"names":["Button","isOperator","val","isNaN","className","this","props","children","onClick","handleClick","Component","Input","Clearbtn","handleClear","App","addToInput","setState","input","state","addDecimal","indexOf","clearInput","result","currrentNumber","operator","parseInt","previousNumber","add","sub","mul","div","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e9588c6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n    isOperator = val => {\r\n        return !isNaN(val) || val === \".\" || val === \"=\";\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={`button ${this.isOperator\r\n                (this.props.children) ? \"\" : \"operator\"}`}\r\n                onClick={() => this.props.handleClick(this.props.children)}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Button;","import React, { Component } from 'react';\r\nimport './Input.css';\r\n\r\nclass Input extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"input\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Input;","import React, { Component } from 'react';\r\nimport './Clearbtn.css';\r\n\r\nclass Clearbtn extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"clearbtn\"\r\n                onClick={() => this.props.handleClear()}\r\n            >\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Clearbtn;","import React, { Component } from 'react';\nimport './App.css';\nimport Button from './components/Button';\nimport Input from './components/Input';\nimport Clearbtn from './components/Clearbtn';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currrentNumber: \"\",\n      operator: \"\",\n    };\n  }\n\n  addToInput = val => {\n    this.setState({ input: this.state.input + val })\n  };\n\n  addDecimal = val => {\n    if (this.state.input.indexOf(\".\") === -1) {\n      this.setState({ input: this.state.input + val });\n    }\n  };\n\n  clearInput = () => {\n    this.setState({ input: \" \" });\n  };\n\n  result = () => {\n    this.state.currrentNumber = this.state.input;\n    if (this.state.operator == \"plus\") {\n      this.setState({\n        input: parseInt(this.state.previousNumber) +\n          parseInt(this.state.currrentNumber),\n      });\n    } else if (this.state.operator == \"subtract\") {\n      this.setState({\n        input: parseInt(this.state.previousNumber) -\n          parseInt(this.state.currrentNumber),\n      });\n    } else if (this.state.operator == \"multiply\") {\n      this.setState({\n        input: parseInt(this.state.previousNumber) *\n          parseInt(this.state.currrentNumber),\n      });\n    } else if (this.state.operator == \"divide\") {\n      this.setState({\n        input: parseInt(this.state.previousNumber) /\n          parseInt(this.state.currrentNumber),\n      });\n    }\n  };\n\n  add = () => {\n    this.state.previousNumber = this.state.input\n    this.setState({ input: \"\" });\n    this.state.operator = \"plus\";\n  };\n\n  sub = () => {\n    this.state.previousNumber = this.state.input\n    this.setState({ input: \"\" });\n    this.state.operator = \"subtract\";\n  };\n\n  mul = () => {\n    this.state.previousNumber = this.state.input\n    this.setState({ input: \"\" });\n    this.state.operator = \"multiply\";\n  };\n\n  div = () => {\n    this.state.previousNumber = this.state.input\n    this.setState({ input: \"\" });\n    this.state.operator = \"divide\";\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"calc-wrapper\">\n          <div className=\"row\" >\n            <Input>{this.state.input}</Input>\n          </div>\n          <div className=\"row\">\n            <Clearbtn handleClear={this.clearInput}>CLEAR/RESET</Clearbtn>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>7</Button>\n            <Button handleClick={this.addToInput}>8</Button>\n            <Button handleClick={this.addToInput}>9</Button>\n            <Button handleClick={this.add}>+</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>4</Button>\n            <Button handleClick={this.addToInput}>5</Button>\n            <Button handleClick={this.addToInput}>6</Button>\n            <Button handleClick={this.sub}>-</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addToInput}>1</Button>\n            <Button handleClick={this.addToInput}>2</Button>\n            <Button handleClick={this.addToInput}>3</Button>\n            <Button handleClick={this.mul}>x</Button>\n          </div>\n          <div className=\"row\">\n            <Button handleClick={this.addDecimal}>.</Button>\n            <Button handleClick={this.addToInput}>0</Button>\n            <Button handleClick={this.result}>=</Button>\n            <Button handleClick={this.div}>/</Button>\n          </div >\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}